import logging

from aiogram import Router, types, F
from aiogram.enums import ParseMode

from aiohttp import web

from app.db.db import DB
from app.bot.bot import bot

router = Router()


@router.callback_query(F.data.startswith("send_to_channel::"))
async def send_to_channel_query(callback: types.CallbackQuery):
    """
    –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–æ–≤–∞—Ä–∞ –≤ –∫–∞–Ω–∞–ª
    :param callback:
    :return:
    """
    product_id = int(callback.data.split("::")[1])

    db = DB()

    product = await db.select_where(table_name="sent_to_admin",
                                    where_cond="product_id",
                                    where_value=product_id)

    _, title, price, price_discount, vendor_code, link, image_link, date, category_id, pid = product[0]

    category = await db.select_where(table_name="categories",
                                     where_cond="id",
                                     where_value=category_id)

    message = f"""*{title}*

üìå *{price_discount} ‚ÇΩ* | ~{price} ‚ÇΩ~

–ö–æ–¥ —Ç–æ–≤–∞—Ä–∞: {vendor_code}

–°–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ [OZON]({link})

‚ù§Ô∏è - –°—É–ø–µ—Ä
üëçüèª - –ü–æ–π–¥—ë—Ç
üòê - –ù–µ –æ—á–µ–Ω—å
üíµ - –î–æ—Ä–æ–≥–æ–≤–∞—Ç–æ

#{str(category[0][1]).replace(' ', '_').lower()}
"""

    message = message.replace('.', '\.')\
                     .replace('|', '\|')\
                     .replace('-', '\-')\
                     .replace('#', '\#')\
                     .replace('_', '\_')\
                     .replace('!', '\!')

    await bot.send_photo(chat_id=category[0][-1],
                         photo=image_link,
                         caption=message,
                         reply_markup=None,
                         parse_mode=ParseMode.MARKDOWN_V2)

    await callback.message.delete()

    logging.info(f"Sent post to channel {category[0][-1]} | Product ID {product_id}")

    return web.Response(status=200)


@router.callback_query(F.data.startswith("drop_post::"))
async def drop_post(callback: types.CallbackQuery):
    """
    –£–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –∏–∑ –∞–¥–º–∏–Ω-—á–∞—Ç–∞
    :param callback:
    :return:
    """
    product_id = int(callback.data.split("::")[1])

    db = DB()

    await db.delete(table_name="sent_to_admin",
                    where_cond="product_id",
                    where_value=product_id)

    await callback.message.delete()
